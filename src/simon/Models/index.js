/* @flow */
import { delay, cycle } from './GameCycle';
import SoundManager from './SoundManager';
import { timerState, resetTimer, increment, decrement, tick } from './Timer';
import {
  TOTAL_ROUNDS,
  COLORS,
  simonState,
  addGameplayColor,
  resetSimon,
  setInput,
  hasWonGame,
  hasWonRound,
  showSequenceOver,
  recordPlayerAttempt,
  currentGameplayColor,
  nextGameplayColor,
  hasFailedRound,
  toggleState,
  toggleStrict,
  randomColor,
  nextRound,
  incrementScore,
  resetAttemptStep,
  restartRound,
} from './Simon';

export {
  delay,
  cycle,
  SoundManager,
  timerState,
  resetTimer,
  tick,
  increment,
  decrement,
  TOTAL_ROUNDS,
  COLORS,
  simonState,
  addGameplayColor,
  resetSimon,
  setInput,
  hasWonGame,
  hasWonRound,
  showSequenceOver,
  recordPlayerAttempt,
  currentGameplayColor,
  nextGameplayColor,
  hasFailedRound,
  toggleState,
  toggleStrict,
  randomColor,
  nextRound,
  incrementScore,
  resetAttemptStep,
  restartRound,
};
